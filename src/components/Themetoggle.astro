
<div id="themeToggle" title="Settings" class="flex items-center justify-center w-10 h-10 rounded-md transition-colors hover:bg-slate/10">
  <svg class="theme_toggle_svg" fill="none" stroke="currentColor" width="2em" height="2em" stroke-width="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
        <path stroke-linecap="round" stroke-linejoin="round" d="M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z"></path>
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
    </svg>
</div>

<style>
  #themeToggle {
    border: 0;
    cursor: pointer;
  }
  .theme_toggle_circle1 {
    transition: cx .5s, cy .5s;
    cx: 100%;
    cy: 0%
  }
  .theme_toggle_circle2 {
    transition: r .3s;
  }
  .theme_toggle_svg {
    transition: transform .5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: rotate(90deg);
  }
 .theme_toggle_g {
    transition: opacity .5s;
    opacity: 1;
  }
  :global(html.dark) #themeToggle .theme_toggle_circle1 {
    cx: 50%;
    cy: 23%;
  }
  :global(html.dark) #themeToggle .theme_toggle_svg {
    transform: rotate(40deg);
  }
  :global(html.dark) #themeToggle .theme_toggle_g {
    opacity: 0;
  }
</style>

<script>
const themeToggle = document.getElementById('themeToggle')
const themeCircle1 = document.querySelector('.theme_toggle_circle1')
const themeCircle2 = document.querySelector('.theme_toggle_circle2')
// const toogleThemeCircle = () => {
//   const darkMode = document.documentElement.classList.contains('dark') ?? localStorage.getItem('theme') === 'dark'
//   if (darkMode) {
//     themeCircle1.setAttribute('r', '9')
//     themeCircle2.setAttribute('r', '9')
//   } else {
//     themeCircle1.setAttribute('r', '5')
//     themeCircle2.setAttribute('r', '5')
//   }
// }

// const listenColorSchema = () => {
//   const colorSchema = window.matchMedia('(prefers-color-scheme: dark)')
//   colorSchema.addEventListener('change', () => {
//     document.documentElement.classList.toggle('dark', colorSchema.matches)
//     toogleThemeCircle()
//   })
// }

// listenColorSchema()
// toogleThemeCircle()

const handleToggleClick = () => {
    window.location.replace('http://127.0.0.1:5500/src/menu/index.html')
}
themeToggle.addEventListener('click', handleToggleClick)
</script>
